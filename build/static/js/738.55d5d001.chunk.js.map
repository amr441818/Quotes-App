{"version":3,"file":"static/js/738.55d5d001.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QoutesDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__TbvlK\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__Y57Z5\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__s3Kue\"};","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport CommentItem from \"./CommentItem\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./CommentsList.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\n\nconst CommentsList = (props) => {\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, data, error, status } = useHttp(getAllComments, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  console.log(data);\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"error\") {\n    return <div className=\"centered focused\">{error}</div>;\n  }\n  if (status === \"completed\" && data.length === 0) {\n    return <div className=\"centered\">No Comments Yet.</div>;\n  }\n  return (\n    <ul className={classes.comments}>\n      {data.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__SrL55\",\"loading\":\"NewCommentForm_loading__pHgG3\",\"control\":\"NewCommentForm_control__1IEyY\",\"actions\":\"NewCommentForm_actions__UtAF0\"};","import { useRef } from \"react\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport useHttp from \"../../hooks/use-http\";\nimport classes from \"./NewCommentForm.module.css\";\nimport { useParams } from \"react-router-dom\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const params = useParams();\n  const { sendRequest, error, status } = useHttp(addComment);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    sendRequest({\n      quoteId: params.quoteId,\n      commentData: { text: commentTextRef.current.value },\n    });\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === \"error\") {\n    return <div className=\"centered focused\">{error}</div>;\n  }\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from \"react\";\n\nimport classes from \"./Comments.module.css\";\nimport CommentsList from \"./CommentsList\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <CommentsList />\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__bR9X+\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment, useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HightlightQuote from \"../components/quotes/HighlightedQuote\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nconst QoutesDetail = (props) => {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  const { quoteId } = params; // here we use distruction to prevent type all parms object in use effect dependance and re-excute the componnet for anything inside the object\r\n  console.log(match); // the output is an object with keys path , url and params\r\n  const { sendRequest, data, status, error } = useHttp(getSingleQuote, true);\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (status === \"error\") {\r\n    return <div className=\"centered focused\">{error}</div>;\r\n  }\r\n\r\n  if (!data.text) {\r\n    return <h1>this qoute not found!</h1>;\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <HightlightQuote text={data.text} author={data.author} />\r\n      <Route path={`${match.url}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comment`}>\r\n            Load comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comment`} exact>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default QoutesDetail;\r\n"],"names":["props","className","classes","text","quoteId","useParams","useHttp","getAllComments","sendRequest","data","error","status","useEffect","console","log","LoadingSpinner","length","map","comment","id","commentTextRef","useRef","params","addComment","submitFormHandler","event","preventDefault","commentData","current","value","onSubmit","htmlFor","rows","ref","useState","isAddingComment","setIsAddingComment","onClick","author","match","useRouteMatch","getSingleQuote","Fragment","path","url","exact","to"],"sourceRoot":""}