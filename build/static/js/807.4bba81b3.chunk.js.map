{"version":3,"file":"static/js/807.4bba81b3.chunk.js","mappings":"4MACA,EAAuB,wB,SCkBvB,EAhBkB,SAACA,GACjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACC,GAAE,kBAAaL,EAAMM,IAAML,UAAU,MAAK,SAAC,sBAKvD,EChBA,EAAuB,wBAAvB,EAAyD,2BCsDzD,EAtCkB,SAACD,GACjB,IARkBO,EAAQC,EAQpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgD,QADlC,IAAIC,gBAAgBH,EAASI,QACXC,IAAI,QACpCC,GAZYV,EAYcP,EAAMO,OAZZC,EAYoBK,EAXvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EACxBa,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAC7C,KAmBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKpB,UAAWC,EAAgB,UAC9B,oBAAQoB,QAdY,WAExBb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAoB,OAAS,QAMlD,EAIyC,UAAC,WACzBA,EAAoB,aAAe,kBAGhD,eAAIZ,UAAWC,EAAa,SACzBe,EAAaQ,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAIX,QAKZ,E,SCpDA,EAA2B,gCCY3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,uBAAG,sBACH,SAAC,KAAI,CAACG,GAAG,eAAeJ,UAAU,MAAK,SAAC,kBAK9C,E,kBCqBA,EAzBkB,WAChB,OAA6C0B,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAA3DC,EAAW,EAAXA,YAAaC,EAAI,EAAJA,KAAMC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAKnC,OAJAC,EAAAA,EAAAA,YAAU,WACRJ,GACF,GAAG,CAACA,IAEW,YAAXE,GAEA,gBAAK9B,UAAU,WAAU,UACvB,SAACiC,EAAA,EAAc,MAIN,UAAXH,GACK,gBAAK9B,UAAU,mBAAkB,SAAE+B,IAE5B,cAAXD,IAA2BD,GAAyB,IAAhBA,EAAKK,QAE1C,gBAAKlC,UAAU,WAAU,UACvB,SAAC,EAAY,OAIZ,SAAC,EAAS,CAACM,OAAQuB,GAC5B,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/allQoutes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__x788w\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__h2zT3\",\"sorting\":\"QuoteList_sorting__uDasC\"};","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\n// here we need to build a button for sort the list\n//we will use somthing called query from the url\n//the query is the other segment after ? and that don't change the router matching\n\nconst sortQuotes = (quotes, asc) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (asc) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else return quoteA.id < quoteB.id ? 1 : -1;\n  });\n};\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAcending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAcending);\n  const changeSortHandler = () => {\n    // here we can write this with differ ways\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAcending ? \"Dese\" : \"asc\"}`,\n    });\n\n    // history.push(\n    //   `${location.pathname}?sort=${isSortingAcending ? \"Dese\" : \"asc\"}`\n    // );\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortHandler}>\n          sorting {isSortingAcending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__6pb-7\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/addNewQuote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFoud from \"../components/quotes/NoQuotesFound\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQoutes = () => {\r\n  const { sendRequest, data, status, error } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (status === \"error\") {\r\n    return <div className=\"centered focused\">{error}</div>;\r\n  }\r\n  if ((status === \"completed\" && !data) || data.length === 0) {\r\n    return (\r\n      <div className=\"centered\">\r\n        <NoQuotesFoud />\r\n      </div>\r\n    );\r\n  }\r\n  return <QuoteList quotes={data} />;\r\n};\r\nexport default AllQoutes;\r\n"],"names":["props","className","classes","text","author","to","id","quotes","asc","history","useHistory","location","useLocation","isSortingAcending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","data","status","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}